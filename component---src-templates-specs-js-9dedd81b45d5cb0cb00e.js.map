{"version":3,"sources":["webpack:///./src/templates/specs.js"],"names":["Template","data","pageContext","html","markdownRemark","replace","withPrefix","pagePath","_","p1","p2","p3","p4","toLowerCase","title","match","className","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"qQAMe,SAASA,EAAT,GAGX,IAFFC,EAEC,EAFDA,KACAC,EACC,EADDA,YAGMC,EADqBF,EAAnBG,eACoBD,KAEzBE,QACC,kBAHS,SASVA,QACC,sDAVS,KAWJC,qBAAcJ,EAAYK,SAAhB,KAXN,UAcVF,QACC,qCACA,SAACG,EAAGC,EAAIC,EAAIC,EAAIC,GAAhB,OAA0BH,EAA1B,QAAoCE,EAAGN,QAAQ,KAAM,KAAKQ,cAA1D,IAA2EH,EAAKC,EAAKC,KAGnFE,EAAQX,EAAKY,MAAM,sBAAsB,GAC/C,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKD,MAAOA,IACZ,yBACEE,UAAU,YACVC,wBAAyB,CAAEC,OAAQf,MAMpC,IAAMgB,EAAS","file":"component---src-templates-specs-js-9dedd81b45d5cb0cb00e.js","sourcesContent":["import React from \"react\"\nimport { graphql, withPrefix } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n  pageContext,\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds your post data\n  const html = markdownRemark.html\n    // Replace all `/v[version].md` to `-v[version].md` for all links\n    .replace(\n      /\\/?(v\\d+)(.md)/g,\n      `-$1$2`\n    )\n    // Correct relative path  for all links\n    // Strip away `.md`  for all links\n    // Replace `README` to `/` for all links\n    .replace(\n      /(href=\")([A-Za-z1-9./-]+?)(README)?(.md)(#.+?)?(\")/g,\n      `$1${withPrefix(`${pageContext.pagePath}/`)}$2$5$6`\n    )\n    // Add anchor to all headings\n    .replace(\n      /(<h[1-6].*?)(>)(.*?)(<\\/h[1-6]>)/g,\n      (_, p1, p2, p3, p4) => `${p1} id=\"${p3.replace(/ /g, '-').toLowerCase()}\"${p2}${p3}${p4}`\n    )\n\n  const title = html.match(/<h1.*?>(.*?)<\\/h1>/)[1]\n  return (\n    <Layout>\n      <SEO title={title} />\n      <div\n        className=\"spec-page\"\n        dangerouslySetInnerHTML={{ __html: html }}\n      />\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n    }\n  }\n`"],"sourceRoot":""}